// <auto-generated />
using System;
using ICS.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICS.DAL.Migrations
{
    [DbContext(typeof(IcsDbContext))]
    [Migration("20240229223056_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("ICS.DAL.Entities.Admin", b =>
                {
                    b.Property<string>("UserLogin")
                        .HasColumnType("TEXT");

                    b.HasKey("UserLogin");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ICS.DAL.Entities.Student", b =>
                {
                    b.Property<string>("UserLogin")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserLogin");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ICS.DAL.Entities.Teacher", b =>
                {
                    b.Property<string>("UserLogin")
                        .HasColumnType("TEXT");

                    b.HasKey("UserLogin");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ICS.DAL.Entities.User", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ICS.DAL.Entities.Admin", b =>
                {
                    b.HasOne("ICS.DAL.Entities.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("ICS.DAL.Entities.Admin", "UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICS.DAL.Entities.Student", b =>
                {
                    b.HasOne("ICS.DAL.Entities.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("ICS.DAL.Entities.Student", "UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICS.DAL.Entities.Teacher", b =>
                {
                    b.HasOne("ICS.DAL.Entities.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("ICS.DAL.Entities.Teacher", "UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICS.DAL.Entities.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
