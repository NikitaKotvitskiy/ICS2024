// <auto-generated />
using System;
using ICS.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICS.DAL.Migrations
{
    [DbContext(typeof(IcsDbContext))]
    [Migration("20240520232048_StudentToSubjectTable")]
    partial class StudentToSubjectTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("ICS.DAL.Entities.ActivityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Room")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2a"),
                            EndTime = new DateTime(2024, 2, 20, 13, 50, 0, 0, DateTimeKind.Unspecified),
                            Room = 2,
                            StartTime = new DateTime(2024, 2, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2d"),
                            Type = 1
                        });
                });

            modelBuilder.Entity("ICS.DAL.Entities.EvaluationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("StudentId");

                    b.ToTable("Evaluations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2b"),
                            ActivityId = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2a"),
                            Points = 2,
                            StudentId = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2c")
                        },
                        new
                        {
                            Id = new Guid("8f3f6551-5a7c-40ff-af05-6d7edd395736"),
                            ActivityId = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2a"),
                            Points = 3,
                            StudentId = new Guid("4b3702a3-6e75-473b-882b-1c15face46ea")
                        });
                });

            modelBuilder.Entity("ICS.DAL.Entities.StudentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2c"),
                            Name = "Petr",
                            Surname = "Novakov"
                        },
                        new
                        {
                            Id = new Guid("4b3702a3-6e75-473b-882b-1c15face46ea"),
                            Name = "Kamil",
                            Surname = "Ajajaj"
                        });
                });

            modelBuilder.Entity("ICS.DAL.Entities.StudentToSubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("studentToSubjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fabde0cd-eefe-443f-baf6-1234cc2cbf2a"),
                            StudentId = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2c"),
                            SubjectId = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2d")
                        });
                });

            modelBuilder.Entity("ICS.DAL.Entities.SubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fabde0cd-eefe-443f-baf6-3d96cc2cbf2d"),
                            Abbr = "ICS",
                            Credits = 4,
                            Name = "The C# programming language"
                        });
                });

            modelBuilder.Entity("ICS.DAL.Entities.ActivityEntity", b =>
                {
                    b.HasOne("ICS.DAL.Entities.SubjectEntity", "Subject")
                        .WithMany("Activities")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ICS.DAL.Entities.EvaluationEntity", b =>
                {
                    b.HasOne("ICS.DAL.Entities.ActivityEntity", "Activity")
                        .WithMany("Evaluations")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS.DAL.Entities.StudentEntity", "Student")
                        .WithMany("Evaluations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ICS.DAL.Entities.StudentToSubjectEntity", b =>
                {
                    b.HasOne("ICS.DAL.Entities.StudentEntity", "Student")
                        .WithMany("StudentToSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS.DAL.Entities.SubjectEntity", "Subject")
                        .WithMany("StudentToSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ICS.DAL.Entities.ActivityEntity", b =>
                {
                    b.Navigation("Evaluations");
                });

            modelBuilder.Entity("ICS.DAL.Entities.StudentEntity", b =>
                {
                    b.Navigation("Evaluations");

                    b.Navigation("StudentToSubjects");
                });

            modelBuilder.Entity("ICS.DAL.Entities.SubjectEntity", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("StudentToSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
